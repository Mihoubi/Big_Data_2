version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      net_kafka:
       ipv4_address: 172.28.1.20

  kafka:
      image: confluentinc/cp-kafka:6.2.0
      container_name: kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "9101:9101"
      environment:
        ALLOW_ANONYMOUS_LOGIN : yes
        KAFKA_BROKER_ID: 1
        KAFKA_ADVERTISED_HOST_NAME: kafka:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      networks:
        net_kafka:
          ipv4_address: 172.28.1.21
#  nifi:
#    image: apache/nifi:1.13.0
#    ports:
#      - "8080:8080" # Unsecured HTTP Web Port
#    environment:
#      - NIFI_WEB_HTTP_PORT=8080
#      - NIFI_CLUSTER_IS_NODE=true
#      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
#      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
#      - NIFI_ELECTION_MAX_WAIT=1 min
#  nifi:
#    image: apache/nifi:1.10.0
#    container_name: nifi
#    restart: unless-stopped
#    network_mode: bridge
#    ports:
#      # HTTP
#      - 8080:8080/tcp
#      # HTTPS
#      - 8443:8443/tcp
#      # Remote Input Socket
#      - 10000:10000/tcp
#      # JVM Debugger
#      - 8000:8000/tcp
#      # Cluster Node Protocol
#      #- 11443:11443/tcp
#    volumes:
#      # mkdir /var/lib/nifi && chown -R 1000:1000 /var/lib/nifi
#      - /var/lib/nifi/database_repository:/opt/nifi/nifi-current/database_repository
#      - /var/lib/nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
#      - /var/lib/nifi/content_repository:/opt/nifi/nifi-current/content_repository
#      - /var/lib/nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
#      - /var/lib/nifi/state:/opt/nifi/nifi-current/state
#      - /var/lib/nifi/logs:/opt/nifi/nifi-current/logs
#
#      # A custom nifi.properties file can be mounted as follows.
#      #- /var/lib/nifi/conf/nifi.properties:/opt/nifi/nifi-current/conf/nifi.properties:ro
#
#    environment:
#
#      ########## JVM ##########
#
#      # -Xms
#      #   The initial JVM heap size.
#      #NIFI_JVM_HEAP_INIT: 512m
#
#      # -Xmx
#      #   The maximum JVM heap size.
#      #NIFI_JVM_HEAP_MAX: 512m
#
#      # -Xdebug
#      #   The JVM Debugger can be enabled by setting this environment variable to any value.
#      #NIFI_JVM_DEBUGGER: ''
#
#
#
#      ########## Web ##########
#
#      # nifi.web.http.host
#      NIFI_WEB_HTTP_HOST: '0.0.0.0'
#
#      # nifi.web.http.port
#      #   HTTP Port
#      NIFI_WEB_HTTP_PORT: 8080
#
#    networks:
#      net_kafka:
#        ipv4_address: 172.28.1.22

# docker run --name nifi  -p 8443:8443 -d apache/nifi:latest
# docker exec -it  --user root nifi bash
# cd /opt/nifi/nifi-current/logs
# pour r√©cuperer le mot de passe et le user name
# vi oui bien cat nifi-app.log


networks:
  net_kafka:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16